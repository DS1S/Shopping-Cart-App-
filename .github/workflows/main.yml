name: Deployment

on:
  push:
    branches: [ main ]


jobs:
  perform-unit-tests:
    runs-on: ubuntu-latest
    env:
      STAGING_URL: https://a1-fastapi-staging.herokuapp.com
      PRODUCTION_URL: https://a1-fastapi-production.herokuapp.com
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      # Perform unit tests on test suit for backend
      - name: test-fastapi-unit-tests
        timeout-minutes: 1
        run: |
          cd server
          pip install -r requirements/requirements.txt -r requirements/dev-requirements.txt
          sh run-tests.sh
          EXIT_CODE=$?
          if ["$EXIT_CODE" -neq 0]; then
            echo "Tests failed ❌!"
            exit 1
          else
            cd ..
            echo "Tests Passed ✅!"
            exit 0
          fi
               
  deploy-staging:
    needs: perform-unit-tests
    runs-on: ubuntu-latest
    env:
      STAGING_URL: https://a1-fastapi-staging.herokuapp.com
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 16
          
      - run: npm install -g dotenv
          
      - name: deploy-fastapi-staging-heroku
        timeout-minutes: 1
        uses: CDNievas/heroku-action@v1.0
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          heroku_app_name: "a1-fastapi-staging"
          dynamicFiles: ''
          appdir: server
          buildpacks: '["https://github.com/heroku/heroku-buildpack-python"]'
          env_file: deployments/.env.staging
          
          
  staging-health-check:
    needs: deploy-staging
    runs-on: ubuntu-latest
    env:
      STAGING_URL: https://a1-fastapi-staging.herokuapp.com
    steps:
    
      # Make Health check to staging environment
      - name: Site Health Check
        uses: pchalupa/site-health-check@v1.0.2
        with:
          url: ${{env.STAGING_URL}}/health
    
          
  deploy-production:
    needs: staging-health-check
    runs-on: ubuntu-latest
    env:
        PRODUCTION_URL: https://a1-fastapi-production.herokuapp.com
    steps:  
      - uses: actions/checkout@v2
      
      # Load in production env
      - name: Dotenv Action
        uses: falti/dotenv-action@v0.2.7
        with:
          path: server/deployments/.env.production
          
      - name: Heroku pipelines promoting
        uses: NikitaGlukhi/heroku-pipelines-promoting@v2
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          heroku_app_name: "a1-fastapi-staging"
          heroku_promote_to_app: "a1-fastapi-production"
          
  production-health-check:
    needs: deploy-production
    runs-on: ubuntu-latest
    env:
        PRODUCTION_URL: https://a1-fastapi-production.herokuapp.com
    steps:
      # Make Health check to production environment
      - name: Site Health Check
        uses: pchalupa/site-health-check@v1.0.2
        with:
          url: ${{env.PRODUCTION_URL}}/health
